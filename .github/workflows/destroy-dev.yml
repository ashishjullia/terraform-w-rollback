name: Destroy Dev

on:
  push:
    tags:
      - 'destroy-dev-*'

env:
  TF_STATE_BUCKET_NAME: ${{ vars.TF_STATE_BUCKET_NAME }}
  TF_STATE_BUCKET_KEY: "${{ github.event.repository.name }}/terraform.tfstate"
  TF_STATE_BUCKET_REGION: ${{ vars.AWS_REGION }}
  TF_STATE_DYNAMODB_TABLE_NAME: ${{ vars.TF_STATE_DYNAMODB_TABLE_NAME }}
  TF_STATE_DYNAMODB_TABLE_REGION: ${{ vars.AWS_REGION }}

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup AWS CLI for "gh actions" user
        id: ghactions
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get Terraform Version
        run: |
          echo "TF_VERSION=$(head -n 1 .terraform-version)" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: $TF_VERSION

      - name: Terraform Init
        id: init
        run: |
            terraform init \
              -backend-config="bucket=$TF_STATE_BUCKET_NAME" \
              -backend-config="key=$TF_STATE_BUCKET_KEY" \
              -backend-config="region=$TF_STATE_BUCKET_REGION" \
              -backend-config="dynamodb_table=$TF_STATE_DYNAMODB_TABLE_NAME"

      # validates the configuration files in a directory, referring only to the configuration 
      # and not accessing any remote services such as remote state, provider APIs, etc.
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Destroy
        id: destroy
        if: steps.validate.outcome == 'success'
        run: |
          terraform destroy -auto-approve
        
      # reference
      # https://gist.github.com/joejordanbrown/6f25e3ff5f206b5a99d4f511bcd5b8f9
      - name: Delete All Releases
        id: releases-delete
        if: steps.destroy.outcome == 'success'
        run: |
          # gh release list | awk '{print $1;}' | xargs -L1 gh release delete
          for num in `gh release list 2>/dev/null | awk '{print $1}'`; do
              gh release delete $num -y
            done

          for num in `gh api repos/:owner/:repo/tags | jq -r '.[].name'`; do
            gh api repos/:owner/:repo/git/refs/tags/${num} -X DELETE
            echo 'âœ“ Deleted tag' $num
          done
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
